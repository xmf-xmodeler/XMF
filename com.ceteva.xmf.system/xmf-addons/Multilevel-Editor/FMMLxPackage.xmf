parserImport XOCL;

import Root::FMML;

context Root::FMML
@Class FMMLxPackage extends Package

  @Attribute fmmlxAssociationInstances : Set end
  
  @Operation addAssociationInstance(source, target, association)
    if self.fmmlxAssociationInstances = null then self.fmmlxAssociationInstances := {} end;
    self.fmmlxAssociationInstances := self.fmmlxAssociationInstances + {[source,target,association]}
   end
  
  @Operation removeAssociationInstance(source, target, association) 
    if self.fmmlxAssociationInstances = null then self.fmmlxAssociationInstances := {} end;
    self.fmmlxAssociationInstances := self.fmmlxAssociationInstances - {[source,target,association]}
   end
   
  @Operation hasAssociationInstance(source, target, association)
    if fmmlxAssociationInstances = null then false 
      else
      let 
        found = false
      in
        @For link in fmmlxAssociationInstances do
          if link.at(0) = source andthen link.at(1) = target andthen link.at(2) = association then found := true end;
          if link.at(1) = source andthen link.at(0) = target andthen link.at(2) = association then found := true end
        end;
        found
      end
    end 
  end
end