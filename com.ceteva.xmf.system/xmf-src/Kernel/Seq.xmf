/******************************************************************************
 *                                                                            *
 *                              Sequence Types                                *
 *                              --------------                                *
 *                                                                            *
 *   Sequence types Seq(T) are created using the class Seq. This exactly      *
 *   mirrors the class Set. Please refer to XCore::Set for more information.  *
 *                                                                            *
 ******************************************************************************/ 
 
 context Seq
  @Operation inheritsFrom(c:Classifier):Boolean
    if c.isKindOf(Seq)
    then elementType.inheritsFrom(c.elementType)
    else c = Element
    end
  end

context Seq
  @Operation equals(other):Boolean
    if other.isKindOf(Seq)
    then elementType.equals(other.elementType)
    else false
    end
  end

context Seq
  // Create a new seq type by applying the class Seq to a type.
  @Operation init(args)
    let type = args->at(0)
    in if type = Element
       then SeqOfElement
       else
         self.contents := if contents = null then Table(10) else contents end;
         self.setElementType(type);
         self.parents := Set{SeqOfElement};
         self.isFinal := true;
         self.default := Seq{}
       end
    end
  end
  
context Seq
  @Operation setElementType(type)
    self.elementType := type;
    if type.hasSlot("name")
    then self.name := "Seq(" + type.name.toString() + ")"
    else self.name := "Seq(" + type.toString() + ")"
    end;
    self
  end
  
context Seq
  // Create a new seq type by sending an existing seq type
  // a message with the element type.
  @Operation seqType(type:Classifier)
    let seqType = Seq.new()
    in seqType.setElementType(type)
    end
  end