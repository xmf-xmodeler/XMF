parserImport XOCL;

/******************************************************************************
 *                                                                            *
 *                            A Line of Characters                            *
 *                            --------------------                            *
 *                                                                            *
 *  A built-in non-terminal that reads the rest of the current line and       *
 *  returns it as a string.                                                   *
 *                                                                            *
 ******************************************************************************/ 

import Parser;
import BNF;

context BNF

  @Class Line extends Recognizer
	
	@Constructor() ! end
	
	@Operation code(outputChannel)
      format(outputChannel," Line ")
    end
    
    @Operation FV():Set(String)
      Set{}
    end

    @Operation first(grammar)
      Set{"Builtin(Line)"}
    end
    
    @Operation last(g:Grammar,called:[String]):{String}
      {}
    end

    @Operation nullable(grammar):Boolean
       false
    end
	
	@Operation transform(FV:Set(String),grammar):Recognizer
	  self
	end
	
	@Operation toExp(FV:Set(String))
	  [| Root::Parser::BNF::Line() |]
	end
	
  end