parserImport XOCL;

import Clients;
import FmmlxDiagrams;

  context FmmlxManipulator
    @Operation addDelegation(delegateFrom, delegateTo, delegateToLevel)
      if 
        delegateFrom.delegatesTo <> null 
      then 
        ["The class " + delegateFrom.name + " already delegates to " + delegateFrom.delegatesTo.name]
      elseif
        delegateFrom.level <> delegateTo.level
      then 
        ["The class " + delegateFrom.name + " is not on the same level as " + delegateTo.name]
      elseif
        self.transitivelyDelegatesTo(delegateTo, delegateFrom)
      then
        ["The class " + delegateTo.name + " already delegates to " + delegateFrom.name]
      elseif
        delegateToLevel < 0
      then
        ["Delegation level cannot be negative"]
      elseif
        delegateToLevel >= delegateTo.level
      then
        ["Delegation level must be lower then the level where it is defined"]
      else
        delegateFrom.delegatesTo := delegateTo;
        delegateFrom.delegatesToLevel := delegateToLevel;
        []
      end
    end
    
  context FmmlxManipulator
    @Operation setRoleFiller(delegateFrom, delegateTo)
      let
        delegatorClass = delegateFrom.of()
      in
        @While delegatorClass <> delegatorClass.of() andthen (delegatorClass.delegatesTo = null or delegatorClass.delegatesToLevel <> delegateFrom.level) do
          delegatorClass = delegatorClass.of()
        end;
        if 
          delegatorClass = delegatorClass.of() 
        then 
          ["no delegator class found"]
        elseif
          self.isInstanceOf(delegateTo, delegatorClass.delegatesTo, delegatorClass.delegatesToLevel)
        then
          delegateFrom.roleFiller := delegateTo;[]
        else
          [delegateTo + " cannot be role filler for " + delegateFrom +"."]
        end
      end
    end
    
  context FmmlxManipulator
    @Operation transitivelyDelegatesTo(delegateFrom, delegateTo)
      if 
        delegateFrom.delegatesTo = delegateTo 
      then 
        true
      else
        false // TODO: check more cases
      end
    end