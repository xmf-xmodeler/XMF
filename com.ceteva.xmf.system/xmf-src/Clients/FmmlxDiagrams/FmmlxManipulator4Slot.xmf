parserImport XOCL;

import Clients;
import FmmlxDiagrams;

  context FmmlxManipulator
    @Operation changeSlotValue(obj, slotName, valueToBeAdded, requiredType, env:Package)
      if valueToBeAdded.isKindOf(requiredType) 
        orelse valueToBeAdded.isKindOf(Seq(requiredType))
        orelse valueToBeAdded.isKindOf(Set(requiredType))
      then
        obj.set(slotName, valueToBeAdded); null
      else
        valueToBeAdded + " is not of " + requiredType.name
      end
    end
    
  context FmmlxManipulator
    @Operation findAttributeForSlot(instanceWhereTheSlotResides, nameOfTheSlot)
      // EVIL HACK
      if nameOfTheSlot.equals("lastUpdated") then FMMLx::MetaClass.getAttribute("lastUpdated") else
      let
        class = instanceWhereTheSlotResides.of()
      then
        atts = class.allAttributesForLevel(instanceWhereTheSlotResides.level);
        foundAtt = null
      in
        @For att in atts do
          if att.name.toString() = nameOfTheSlot.toString() then
            foundAtt := att
          end
        end;
        foundAtt
      end
      end // HACK
    end