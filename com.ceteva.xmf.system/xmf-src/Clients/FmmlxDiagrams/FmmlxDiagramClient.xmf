parserImport XOCL;

import Clients;
import FmmlxDiagrams;

context FmmlxDiagrams

@Class FmmlxDiagramClient extends Client//, DiagramListener

	@Attribute package : Package end
	@Attribute communicator : Element end

    @Constructor(name)
//      self.setCommandInterpreter(DiagramCommandInterpreter());
//      self.setEventHandler(DiagramEventHandler())
        null
    end
    
    @Operation createDiagram(package,name)
        self.package := package;
        let 
          FmmlxDiagramCommunicator = xmf.javaClass("tool.clients.fmmlxdiagrams.FmmlxDiagramCommunicator");
          handle = xmf.getHandle(self)
        in 
          self.communicator := FmmlxDiagramCommunicator();
          self.communicator.setHandle(handle);
          self.communicator.test().println()
          //;self.communicator.sendPackageToJava(1)
        end;       
        
        let x = FmmlxDiagram()
        in 
          ("x: "+x).println();
          x.newDiagram();
          ("name: "+name).println();
          ("self.newDiagram("+self.name+")").println();
          x
        end
    end
    
    @Operation fibo_i(n) 
       if n <= 2
          then 1
          else self.fibo_i(n-1) + self.fibo_i(n-2)
      end
    end
    
    @Operation fibo(n) 
       self.communicator.sendPackageToJava(["fibo", self.fibo_i(n)])
    end
    
end