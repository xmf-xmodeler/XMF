parserImport XOCL;

import Clients;
import Diagrams;
import Menus;
import ClassDiagrams;

context ClassDiagrams

  @Class AttributeEdge extends Edge
  
    @Attribute name     : AttributeLabel end
    @Attribute mult     : Multiplicity end
    @Attribute typePath : Seq(String) end
  
    @Constructor(name,source,target,typePath,xStart,yStart,xEnd,yEnd) 
      self.init(Seq{null,source,target,0,Edge::arrow,Set{},Seq{},Color(),xStart,yStart,xEnd,yEnd});
      if name.isKindOf(String)
      then 
        // Calculate position of attribute label
        let y = if source.owner.y > target.owner.y then 40 else -60 end;// 15 else 0-30 end;
            x = 15//if source.owner.x > target.owner.x then 15// else 0-35 end 
        in self.name := AttributeLabel(name,x,y)
        end
      end;
      if typePath->asSet <> XCore::Attribute.pathSeq()->asSet
      then self.add(StereotypeLabel(typePath->last))
      end;
      self.mult := Multiplicity("end",self.name.relx-15,self.name.rely);
      self.add(self.name);
      self.add(self.mult)
    end
    
    @Operation multTarget()
      mult
    end
    
    @Operation layoutId():String
      self.name()
    end
    
    @Operation mult()
      mult.multiplicity()
    end
    
    @Operation name()
      name.name()
    end
    
    @Operation setMult(mult)
      self.mult.setMultiplicity(mult)
    end
    
    @Operation setName(name)
      self.name.setName(name)
    end
    
  end
  