parserImport XOCL;

import Clients;
import Diagrams;
import ClassDiagrams;

context ClassDiagrams

  @Class OperationGroup extends Group
  
    @Attribute instLevel  : InstLevelText end
    @Attribute name  : OperationText end
    @Attribute metaclass_ : Text end
      
    @Operation initOperationGroup(nameArg,metaclass0,instLevel,x,y) // initOperationGroup
      self.name := OperationText(nameArg,if not "noBox"= (instLevel+"") then 16 else 0 end + x,y);
      if metaclass0 <> "" then
        self.metaclass_ := Text("<<" + metaclass0 + ">> ",x + 100,y,false)
      else
        self.metaclass_ := Text("",x + 120,y,false)
      end;
      if not "noBox"= (instLevel+"")
      then 
        self.instLevel := InstLevelText(x+1,y);
        self.instLevel.setLevel(instLevel+"");
        // A group should not have any Display attributes set.
        if not " "= (instLevel+"")
        then self.instLevel.setFillColor(Clients::Diagrams::Color(0,0,0))
        end
      else
        self.instLevel := InstLevelText(-3000,-3000)
      end;
      
      self.x := 0;
      self.y := 0
    
    end
    
    @Operation addDisplays()
      self.add(/*self.*/name);
      self.add(/*self.*/metaclass_);
      self.add(/*self.*/instLevel)
    end
    
    @Operation name()
      self.name.opName
    end

    @Operation moveDown()
      @Count i from 1 to 16 do
        instLevel.move(name.x,name.y-1);
        name.move(name.x,name.y-1);
        metaclass_.move(metaclass_.x,metaclass_.y-1)
      end
    end
        
    @Operation moveY(y)
      instLevel.move(instLevel.x(),y);
      name.move(name.x(),y);
      metaclass_.move(metaclass_.x(),y)
    end
    
    @Operation resized(display)
    
      // If the nameLabel has resized then the type
      // may need to move along accordingly.
      
      if metaclass_.x() < (name.x() + name.width()) or
         metaclass_.x() > (name.x() + name.width() + self.separator())
      then 
        metaclass_.move(name.x() + name.width() + self.separator(),metaclass_.y());
        owner.resized(self)
      end
    end
    
    @Operation setName(name)
      self.name.setName(name)
    end
    
    @Operation setOperation(operation)
      self.name.setOperation(operation)
    end
    
    @Operation separator()
      // Between the name and the type...
      10
    end
  
  end