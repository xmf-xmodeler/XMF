parserImport XOCL;

import Clients;
import Diagrams;

context Diagrams

  @Class Color
  
    @Attribute red   : Integer = 0-1 (?) end
    @Attribute green : Integer = 0-1 (?) end
    @Attribute blue  : Integer = 0-1 (?) end
    
    // construct without any parameters for the client to use
    // its default colours
    
    @Constructor()
    end
    
    @Constructor(red,green,blue) !
    end
    
    @Operation makeHSV(hue:Float, saturation:Float, brightness:Float)
      let // as mod() does not yet work with negative numbers...
        addPlus = if hue < 0 // if hue is negative
        then (-(hue.floor())) // the next higher integer number is added, not affecting the fractional digits
        else 0 // if already positive, do nothing
        end
      then
        hue = hue + addPlus // now hue is positive
      then 
        hue = hue * 6.0
      then
        c = hue.floor().mod(6);
        f = (hue - hue.floor());
        b = 255.0*brightness
      then
        p = (b*(1.0- saturation)).round();
        q = (b*(1.0-(saturation*f))).round();
        t = (b*(1.0-((1.0-f)*saturation))).round()
      then 
        b = b.round()
      in 
        @Case c of      
        0 do Color(b,t,p) end 
        1 do Color(q,b,p) end
        2 do Color(p,b,t) end
        3 do Color(p,q,b) end
        4 do Color(t,p,b) end
        5 do Color(b,p,q) end
        end
      end
    end
    
  end