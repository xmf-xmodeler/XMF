parserImport XOCL;
parserImport XMap;

import Clients;
import Diagrams;
import Menus;
import UseCaseDiagrams;

context UseCaseDiagrams

  @Class Actor extends Node
  
    @Attribute name  : Text  = Text("Actor",0,0,true) end
    @Attribute image : Image = Image("images/Actor.gif",0,0,30,50) end
    
    @Constructor(x,y) ! 
      self.setMenuKey(self) 
    end
  
    @Operation addDisplays()
      self.add(image);
      self.add(name)
    end
    
    @Operation addPorts()
      self.add(Port(0,0,width,height))
    end
        
    @Operation buildGlobalMenu()
      let globalMenu = super();
          target = RightClickable::selfTarget
      in globalMenu.add(MenuAction("Delete","CTRL+D",target,Seq{},Node::delete));
         globalMenu
      end
    end
    
    @Operation moveImage()
      let x = ((name.width - image.width)/2).floor()
      in image.move(x.max(0),0)
      end
    end
    
    @Operation moveName()
      name.move(0,image.height)
    end
    
    @Operation pack()
      super();
      self.moveImage();
      self.moveName()
    end
    
    @Operation resize(width,height)
      // Ignore the supplied values and calculate the size...
      let w = name.width.max(image.width);
          h = name.height+image.height
      in super(w,h);
         @For port in ports do
           port.resize(w,h)
         end;
         self.moveImage();
         self.moveName()
      end
    end
  
  end