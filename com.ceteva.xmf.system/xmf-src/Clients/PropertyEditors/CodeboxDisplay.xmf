parserImport XOCL;

import Clients;
import Forms;
import PropertyEditors;

context PropertyEditors

  @Class CodeboxDisplay

    @Bind buttonWidth = 60 end

    @Attribute labelText : String end
    @Attribute maxButton : FormButton end
    @Attribute textbox : FormTextBox end

    @Constructor(labelText,textbox)
      let action = @Operation() self.maximise() end	
      in
        self.maxButton := FormButton("Maximise",action)
      end
    end

    @Operation addToForm(form:Form)
      self.addButton(form);
      self.addTextBox(form)
    end

    @Operation addButton(form)
      form.addElement(self.maxButton)
    end

    @Operation addTextBox(form)
      form.addElement(self.textbox)
    end

    @Operation maximise()
      let formsClient = xmf.findClient(Clients::Forms::FormClient)
      in
        if formsClient <> null
        then
          @Find(form,formsClient.forms)
            when form.isKindOf(CodeboxEditor) andthen
                 form.matchesTextbox(textbox)
          do formsClient.commandInterpreter.setVisible(form)
          else
            @Find(form,formsClient.forms)
              when form.isKindOf(CodeboxEditor)
            do
              let codeboxHistory = form.getHistory()
              in
                @Find(editor,codeboxHistory)
                  when editor.matchesTextbox(textbox)
                do form.handleFormUpdate(editor)
                else textbox.newCodeboxEditor()
                end
              end
            else textbox.newCodeboxEditor()
            end
          end
        end
      end
    end

  end
