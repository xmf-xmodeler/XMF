parserImport XOCL;

/******************************************************************************
 *                                                                            *
 *             Try To Perform Something And Catch The Exceptions              *
 *             -------------------------------------------------              *
 *                                                                            *
 *  A try-clause creates a operation based on a code box that is used as the  *
 *  handler in the current frame. Subsequently, during the execution of the   *
 *  body of the try-clause, any throw will be caught by the current frame     *
 *  because it contains a handler. The instruction operands encode the offset *
 *  of the code box for the handler in the constants vector and the global    *
 *  variable storage required to execute the handler. When executed, the code *
 *  box and globals are used to create a new handler operation.               *
 *                                                                            *
 ******************************************************************************/

import Instrs;

context Instrs

  @Class Try extends Instr
  
    @Attribute freeVars : Integer end
    @Attribute locals : Integer end
    @Attribute source : String end
    @Attribute body : Seq(Instr) end
    @Attribute codeBoxOffset : Integer end
    
    @Constructor(freeVars,locals,source,body) end
    
    @Operation toString():String
      "<Try " +  codeBoxOffset + ">"
    end
    
    @Operation assemble(codeBox)
      let newBox = Assembler::assemble(body,locals,source)
      in self.codeBoxOffset := codeBox.constOffset(newBox);
         codeBox.addInstr(self)
      end
    end
    
    @Operation operands():Integer
      Kernel_mk24bit(codeBoxOffset.byte(2),freeVars,codeBoxOffset.byte(1))
    end
    
  end