\BOOKMARK [0][-]{Doc-Start}{Preface \(Third Edition\)}{}% 1
\BOOKMARK [0][-]{Doc-Start}{Preface \(Second Edition\)}{}% 2
\BOOKMARK [0][-]{Doc-Start}{Preface \(First Edition\)}{}% 3
\BOOKMARK [0][-]{chapter.1}{Language-Driven Development}{}% 4
\BOOKMARK [1][-]{section.1.1}{Challenges Facing Developers Today}{chapter.1}% 5
\BOOKMARK [2][-]{subsection.1.1.1}{Coping with Complexity}{section.1.1}% 6
\BOOKMARK [2][-]{subsection.1.1.2}{The Challenge of Diversity}{section.1.1}% 7
\BOOKMARK [2][-]{subsection.1.1.3}{The Only Constant is Change}{section.1.1}% 8
\BOOKMARK [1][-]{section.1.2}{Language-Driven Development - Providing the Solution}{chapter.1}% 9
\BOOKMARK [2][-]{subsection.1.2.1}{Languages are the Future}{section.1.2}% 10
\BOOKMARK [2][-]{subsection.1.2.2}{Rich Organised Abstraction}{section.1.2}% 11
\BOOKMARK [2][-]{subsection.1.2.3}{Appropriate Abstraction Through Multiple Languages}{section.1.2}% 12
\BOOKMARK [2][-]{subsection.1.2.4}{Integration - Weaving the Rich Tapestry of Languages}{section.1.2}% 13
\BOOKMARK [2][-]{subsection.1.2.5}{Evolvability - The Key to Managing Change}{section.1.2}% 14
\BOOKMARK [2][-]{subsection.1.2.6}{Language-Driven Development - The Complete Solution}{section.1.2}% 15
\BOOKMARK [1][-]{section.1.3}{From Model-Driven to Language-Driven Development}{chapter.1}% 16
\BOOKMARK [2][-]{subsection.1.3.1}{The Unified Modelling Language}{section.1.3}% 17
\BOOKMARK [2][-]{subsection.1.3.2}{MDA}{section.1.3}% 18
\BOOKMARK [1][-]{section.1.4}{Language Engineering and Metamodelling}{chapter.1}% 19
\BOOKMARK [1][-]{section.1.5}{Conclusion}{chapter.1}% 20
\BOOKMARK [0][-]{chapter.2}{Metamodelling}{}% 21
\BOOKMARK [1][-]{section.2.1}{Introduction}{chapter.2}% 22
\BOOKMARK [1][-]{section.2.2}{Features of Languages}{chapter.2}% 23
\BOOKMARK [2][-]{subsection.2.2.1}{Concrete Syntax}{section.2.2}% 24
\BOOKMARK [2][-]{subsection.2.2.2}{Abstract Syntax}{section.2.2}% 25
\BOOKMARK [2][-]{subsection.2.2.3}{Semantics}{section.2.2}% 26
\BOOKMARK [2][-]{subsection.2.2.4}{Mappings}{section.2.2}% 27
\BOOKMARK [2][-]{subsection.2.2.5}{Extensibility}{section.2.2}% 28
\BOOKMARK [1][-]{section.2.3}{Modelling Languages vs. Programming Languages}{chapter.2}% 29
\BOOKMARK [1][-]{section.2.4}{What is a Metamodel?}{chapter.2}% 30
\BOOKMARK [1][-]{section.2.5}{Why Metamodel?}{chapter.2}% 31
\BOOKMARK [2][-]{subsection.2.5.1}{Metamodels and Tools}{section.2.5}% 32
\BOOKMARK [1][-]{section.2.6}{Where do you find Metamodels?}{chapter.2}% 33
\BOOKMARK [1][-]{section.2.7}{Metamodelling Languages}{chapter.2}% 34
\BOOKMARK [1][-]{section.2.8}{Metamodel Architectures}{chapter.2}% 35
\BOOKMARK [2][-]{subsection.2.8.1}{Traditional Metamodel Architecture}{section.2.8}% 36
\BOOKMARK [2][-]{subsection.2.8.2}{Golden Braid Metamodel Architecture}{section.2.8}% 37
\BOOKMARK [1][-]{section.2.9}{The Metamodelling Process}{chapter.2}% 38
\BOOKMARK [1][-]{section.2.10}{Five levels of Metamodelling}{chapter.2}% 39
\BOOKMARK [1][-]{section.2.11}{Conclusion}{chapter.2}% 40
\BOOKMARK [0][-]{chapter.3}{A Metamodelling Facility}{}% 41
\BOOKMARK [1][-]{section.3.1}{Introduction}{chapter.3}% 42
\BOOKMARK [1][-]{section.3.2}{Requirements of a Metamodelling Facility}{chapter.3}% 43
\BOOKMARK [2][-]{subsection.3.2.1}{XMF}{section.3.2}% 44
\BOOKMARK [1][-]{section.3.3}{XMF Features}{chapter.3}% 45
\BOOKMARK [2][-]{subsection.3.3.1}{Core OO Modelling Concepts}{section.3.3}% 46
\BOOKMARK [2][-]{subsection.3.3.2}{Imports}{section.3.3}% 47
\BOOKMARK [2][-]{subsection.3.3.3}{Constraints}{section.3.3}% 48
\BOOKMARK [2][-]{subsection.3.3.4}{Queries}{section.3.3}% 49
\BOOKMARK [2][-]{subsection.3.3.5}{Actions and XOCL}{section.3.3}% 50
\BOOKMARK [2][-]{subsection.3.3.6}{Instantiation}{section.3.3}% 51
\BOOKMARK [2][-]{subsection.3.3.7}{Concrete Syntax}{section.3.3}% 52
\BOOKMARK [2][-]{subsection.3.3.8}{Mappings}{section.3.3}% 53
\BOOKMARK [1][-]{section.3.4}{XMF Architecture}{chapter.3}% 54
\BOOKMARK [2][-]{subsection.3.4.1}{XCore Metamodel}{section.3.4}% 55
\BOOKMARK [1][-]{section.3.5}{Relationship to Existing Metamodelling Languages}{chapter.3}% 56
\BOOKMARK [1][-]{section.3.6}{Conclusion}{chapter.3}% 57
\BOOKMARK [0][-]{chapter.4}{Abstract Syntax}{}% 58
\BOOKMARK [1][-]{section.4.1}{Introduction}{chapter.4}% 59
\BOOKMARK [1][-]{section.4.2}{Modelling Abstract Syntax}{chapter.4}% 60
\BOOKMARK [1][-]{section.4.3}{The Process}{chapter.4}% 61
\BOOKMARK [2][-]{subsection.4.3.1}{Concept Identification}{section.4.3}% 62
\BOOKMARK [2][-]{subsection.4.3.2}{Use Cases}{section.4.3}% 63
\BOOKMARK [2][-]{subsection.4.3.3}{Concept Modelling}{section.4.3}% 64
\BOOKMARK [2][-]{subsection.4.3.4}{Well-formedness Rules}{section.4.3}% 65
\BOOKMARK [2][-]{subsection.4.3.5}{Operations and Queries}{section.4.3}% 66
\BOOKMARK [2][-]{subsection.4.3.6}{Validation and Testing}{section.4.3}% 67
\BOOKMARK [1][-]{section.4.4}{Case Study}{chapter.4}% 68
\BOOKMARK [2][-]{subsection.4.4.1}{Identification of Concepts}{section.4.4}% 69
\BOOKMARK [2][-]{subsection.4.4.2}{The Model}{section.4.4}% 70
\BOOKMARK [2][-]{subsection.4.4.3}{Metamodel Reuse}{section.4.4}% 71
\BOOKMARK [2][-]{subsection.4.4.4}{Well-formedness Rules}{section.4.4}% 72
\BOOKMARK [2][-]{subsection.4.4.5}{Operations}{section.4.4}% 73
\BOOKMARK [2][-]{subsection.4.4.6}{Validating the StateMachine Metamodel}{section.4.4}% 74
\BOOKMARK [1][-]{section.4.5}{Conclusion}{chapter.4}% 75
\BOOKMARK [0][-]{chapter.5}{Concrete syntax}{}% 76
\BOOKMARK [1][-]{section.5.1}{Introduction}{chapter.5}% 77
\BOOKMARK [1][-]{section.5.2}{Textual Syntax}{chapter.5}% 78
\BOOKMARK [2][-]{subsection.5.2.1}{Parsing text using EBNF}{section.5.2}% 79
\BOOKMARK [2][-]{subsection.5.2.2}{Parsing text using XBNF}{section.5.2}% 80
\BOOKMARK [2][-]{subsection.5.2.3}{Building Abstract Syntax}{section.5.2}% 81
\BOOKMARK [1][-]{section.5.3}{Diagrammatic Syntax}{chapter.5}% 82
\BOOKMARK [2][-]{subsection.5.3.1}{Parsing Diagrams}{section.5.3}% 83
\BOOKMARK [2][-]{subsection.5.3.2}{Building Abstract Syntax}{section.5.3}% 84
\BOOKMARK [2][-]{subsection.5.3.3}{Building Diagrams from Abstract Syntax}{section.5.3}% 85
\BOOKMARK [1][-]{section.5.4}{Conclusion}{chapter.5}% 86
\BOOKMARK [0][-]{chapter.6}{Semantics}{}% 87
\BOOKMARK [1][-]{section.6.1}{Introduction}{chapter.6}% 88
\BOOKMARK [1][-]{section.6.2}{What is Semantics?}{chapter.6}% 89
\BOOKMARK [1][-]{section.6.3}{Why Semantics?}{chapter.6}% 90
\BOOKMARK [1][-]{section.6.4}{Semantics and Metamodels}{chapter.6}% 91
\BOOKMARK [1][-]{section.6.5}{Approaches}{chapter.6}% 92
\BOOKMARK [1][-]{section.6.6}{Translational Semantics}{chapter.6}% 93
\BOOKMARK [2][-]{subsection.6.6.1}{Approaches}{section.6.6}% 94
\BOOKMARK [2][-]{subsection.6.6.2}{Example}{section.6.6}% 95
\BOOKMARK [1][-]{section.6.7}{Operational Semantics}{chapter.6}% 96
\BOOKMARK [2][-]{subsection.6.7.1}{Example}{section.6.7}% 97
\BOOKMARK [1][-]{section.6.8}{Extensional Semantics}{chapter.6}% 98
\BOOKMARK [2][-]{subsection.6.8.1}{Example}{section.6.8}% 99
\BOOKMARK [1][-]{section.6.9}{Denotational Semantics}{chapter.6}% 100
\BOOKMARK [2][-]{subsection.6.9.1}{Example}{section.6.9}% 101
\BOOKMARK [1][-]{section.6.10}{Process}{chapter.6}% 102
\BOOKMARK [1][-]{section.6.11}{Conclusion}{chapter.6}% 103
\BOOKMARK [0][-]{chapter.7}{Executable Metamodelling}{}% 104
\BOOKMARK [1][-]{section.7.1}{Introduction}{chapter.7}% 105
\BOOKMARK [1][-]{section.7.2}{Why Executable Metamodelling?}{chapter.7}% 106
\BOOKMARK [2][-]{subsection.7.2.1}{Executability and XMF}{section.7.2}% 107
\BOOKMARK [2][-]{subsection.7.2.2}{Executable Metamodelling and Programming}{section.7.2}% 108
\BOOKMARK [1][-]{section.7.3}{Adding Executability}{chapter.7}% 109
\BOOKMARK [2][-]{subsection.7.3.1}{XOCL Extensions}{section.7.3}% 110
\BOOKMARK [1][-]{section.7.4}{Examples}{chapter.7}% 111
\BOOKMARK [2][-]{subsection.7.4.1}{Example 1: Model Merge}{section.7.4}% 112
\BOOKMARK [2][-]{subsection.7.4.2}{Example 2: Find and Replace}{section.7.4}% 113
\BOOKMARK [2][-]{subsection.7.4.3}{Example 3: Walker}{section.7.4}% 114
\BOOKMARK [2][-]{subsection.7.4.4}{Example 4: Meta-Patterns}{section.7.4}% 115
\BOOKMARK [1][-]{section.7.5}{Conclusion}{chapter.7}% 116
\BOOKMARK [0][-]{chapter.8}{Mappings}{}% 117
\BOOKMARK [1][-]{section.8.1}{Introduction}{chapter.8}% 118
\BOOKMARK [1][-]{section.8.2}{Applications Of Mappings}{chapter.8}% 119
\BOOKMARK [2][-]{subsection.8.2.1}{Vertical Mappings}{section.8.2}% 120
\BOOKMARK [2][-]{subsection.8.2.2}{Horizontal Mappings}{section.8.2}% 121
\BOOKMARK [2][-]{subsection.8.2.3}{Variant Dimensions}{section.8.2}% 122
\BOOKMARK [1][-]{section.8.3}{Types of Mappings}{chapter.8}% 123
\BOOKMARK [2][-]{subsection.8.3.1}{Unidirectional Mappings}{section.8.3}% 124
\BOOKMARK [2][-]{subsection.8.3.2}{Synchronised Mappings}{section.8.3}% 125
\BOOKMARK [1][-]{section.8.4}{Requirements of a Mapping Language}{chapter.8}% 126
\BOOKMARK [1][-]{section.8.5}{XMap}{chapter.8}% 127
\BOOKMARK [1][-]{section.8.6}{XMap Syntax}{chapter.8}% 128
\BOOKMARK [1][-]{section.8.7}{XMap Examples}{chapter.8}% 129
\BOOKMARK [2][-]{subsection.8.7.1}{StateMachines to Java}{section.8.7}% 130
\BOOKMARK [2][-]{subsection.8.7.2}{Mapping to XML}{section.8.7}% 131
\BOOKMARK [1][-]{section.8.8}{Mapping Specifications}{chapter.8}% 132
\BOOKMARK [1][-]{section.8.9}{Mapping Issues}{chapter.8}% 133
\BOOKMARK [2][-]{subsection.8.9.1}{Merging}{section.8.9}% 134
\BOOKMARK [2][-]{subsection.8.9.2}{Traceability}{section.8.9}% 135
\BOOKMARK [1][-]{section.8.10}{XSync}{chapter.8}% 136
\BOOKMARK [2][-]{subsection.8.10.1}{Examples}{section.8.10}% 137
\BOOKMARK [1][-]{section.8.11}{Conclusion}{chapter.8}% 138
\BOOKMARK [0][-]{chapter.9}{Reuse}{}% 139
\BOOKMARK [1][-]{section.9.1}{Introduction}{chapter.9}% 140
\BOOKMARK [1][-]{section.9.2}{Extension Based Approaches}{chapter.9}% 141
\BOOKMARK [2][-]{subsection.9.2.1}{Specialisation}{section.9.2}% 142
\BOOKMARK [2][-]{subsection.9.2.2}{Stereotyping, Tags and Profiles}{section.9.2}% 143
\BOOKMARK [2][-]{subsection.9.2.3}{Package specialisation and Meta-Packages}{section.9.2}% 144
\BOOKMARK [1][-]{section.9.3}{Translation Based Approaches}{chapter.9}% 145
\BOOKMARK [2][-]{subsection.9.3.1}{Example}{section.9.3}% 146
\BOOKMARK [1][-]{section.9.4}{Family of Languages}{chapter.9}% 147
\BOOKMARK [1][-]{section.9.5}{The XCore Framework}{chapter.9}% 148
\BOOKMARK [1][-]{section.9.6}{Conclusion}{chapter.9}% 149
\BOOKMARK [0][-]{chapter.10}{Case Study 1: An Aspect-Oriented Language}{}% 150
\BOOKMARK [1][-]{section.10.1}{Introduction}{chapter.10}% 151
\BOOKMARK [1][-]{section.10.2}{AOL}{chapter.10}% 152
\BOOKMARK [1][-]{section.10.3}{Language Definition Strategy}{chapter.10}% 153
\BOOKMARK [1][-]{section.10.4}{Abstract Syntax}{chapter.10}% 154
\BOOKMARK [2][-]{subsection.10.4.1}{Identification of Concepts}{section.10.4}% 155
\BOOKMARK [2][-]{subsection.10.4.2}{Abstract Syntax Model}{section.10.4}% 156
\BOOKMARK [1][-]{section.10.5}{Semantics}{chapter.10}% 157
\BOOKMARK [1][-]{section.10.6}{Concrete Syntax}{chapter.10}% 158
\BOOKMARK [1][-]{section.10.7}{Conclusion}{chapter.10}% 159
\BOOKMARK [0][-]{chapter.11}{Case Study 2: A Telecoms Language}{}% 160
\BOOKMARK [1][-]{section.11.1}{Introduction}{chapter.11}% 161
\BOOKMARK [1][-]{section.11.2}{The Case Study: OSS/J Inventory}{chapter.11}% 162
\BOOKMARK [1][-]{section.11.3}{Abstract Syntax Model}{chapter.11}% 163
\BOOKMARK [2][-]{subsection.11.3.1}{Well-formedness Rules}{section.11.3}% 164
\BOOKMARK [1][-]{section.11.4}{Concrete Syntax}{chapter.11}% 165
\BOOKMARK [1][-]{section.11.5}{Semantics}{chapter.11}% 166
\BOOKMARK [1][-]{section.11.6}{Instantiation}{chapter.11}% 167
\BOOKMARK [1][-]{section.11.7}{Transformations}{chapter.11}% 168
\BOOKMARK [1][-]{section.11.8}{Tool Mapping}{chapter.11}% 169
\BOOKMARK [1][-]{section.11.9}{Conclusion}{chapter.11}% 170
\BOOKMARK [0][-]{chapter.12}{Case Study 3: A Simple Programming Language}{}% 171
\BOOKMARK [1][-]{section.12.1}{Introduction}{chapter.12}% 172
\BOOKMARK [1][-]{section.12.2}{XAction}{chapter.12}% 173
\BOOKMARK [2][-]{subsection.12.2.1}{XAction Values}{section.12.2}% 174
\BOOKMARK [2][-]{subsection.12.2.2}{XAction Expressions}{section.12.2}% 175
\BOOKMARK [2][-]{subsection.12.2.3}{XAction Statements}{section.12.2}% 176
\BOOKMARK [1][-]{section.12.3}{An Evaluator for XAction}{chapter.12}% 177
\BOOKMARK [2][-]{subsection.12.3.1}{Evaluating Expressions}{section.12.3}% 178
\BOOKMARK [2][-]{subsection.12.3.2}{Evaluating Statements}{section.12.3}% 179
\BOOKMARK [1][-]{section.12.4}{A Translator for XAction with Run-Time Types}{chapter.12}% 180
\BOOKMARK [2][-]{subsection.12.4.1}{Translating Expressions}{section.12.4}% 181
\BOOKMARK [2][-]{subsection.12.4.2}{Translating Statements}{section.12.4}% 182
\BOOKMARK [1][-]{section.12.5}{A Translator for XAction without Run-Time Types}{chapter.12}% 183
\BOOKMARK [2][-]{subsection.12.5.1}{Translating Expressions}{section.12.5}% 184
\BOOKMARK [2][-]{subsection.12.5.2}{Translating Statements}{section.12.5}% 185
\BOOKMARK [1][-]{section.12.6}{Compiling XAction}{chapter.12}% 186
\BOOKMARK [2][-]{subsection.12.6.1}{Compiling Expressions}{section.12.6}% 187
\BOOKMARK [2][-]{subsection.12.6.2}{Compiling Statements}{section.12.6}% 188
\BOOKMARK [1][-]{section.12.7}{Abstract Syntax to Concrete Syntax}{chapter.12}% 189
\BOOKMARK [1][-]{section.12.8}{Conclusion}{chapter.12}% 190
\BOOKMARK [0][-]{chapter.13}{Case Study 4: Interactive TV}{}% 191
\BOOKMARK [1][-]{section.13.1}{Introduction}{chapter.13}% 192
\BOOKMARK [1][-]{section.13.2}{Interactive Application Architecture}{chapter.13}% 193
\BOOKMARK [1][-]{section.13.3}{A DSL for Interactive Applications}{chapter.13}% 194
\BOOKMARK [1][-]{section.13.4}{Implementation}{chapter.13}% 195
\BOOKMARK [2][-]{subsection.13.4.1}{Syntax}{section.13.4}% 196
\BOOKMARK [2][-]{subsection.13.4.2}{Semantics}{section.13.4}% 197
\BOOKMARK [2][-]{subsection.13.4.3}{Handling Events}{section.13.4}% 198
\BOOKMARK [1][-]{section.13.5}{Simulation}{chapter.13}% 199
\BOOKMARK [1][-]{section.13.6}{XML Representation for Applications}{chapter.13}% 200
\BOOKMARK [1][-]{section.13.7}{Conclusion}{chapter.13}% 201
\BOOKMARK [0][-]{chapter.14}{Case Study 5: Graphs}{}% 202
\BOOKMARK [1][-]{section.14.1}{Introduction}{chapter.14}% 203
\BOOKMARK [1][-]{section.14.2}{A Model of Graphs}{chapter.14}% 204
\BOOKMARK [1][-]{section.14.3}{Graph Applications}{chapter.14}% 205
